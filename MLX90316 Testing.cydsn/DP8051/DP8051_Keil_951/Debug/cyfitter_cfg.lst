C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(D
                    -EBUG) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter
                    -_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  3.3 CP2
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2015 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          
  25          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  26          
  27          
  28          #if defined(__C51__) || defined(__CX51__)
  29                  #define CYPACKED
  30                  #define CYPACKED_ATTR
  31                  #define CYALIGNED
  32                  
  33              #define CY_CFG_UNUSED
  34                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  35          
  36          
  37          
  38                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  39                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  40                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  41          #else
                      #error Unsupported toolchain
              #endif
  44          
  45          
  46          
  47          /* Clock startup error codes                                                   */
  48          #define CYCLOCKSTART_NO_ERROR    0u
  49          #define CYCLOCKSTART_XTAL_ERROR  1u
  50          #define CYCLOCKSTART_32KHZ_ERROR 2u
  51          #define CYCLOCKSTART_PLL_ERROR   3u
  52          
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 2   

  53          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  54          /*******************************************************************************
  55          * Function Name: CyClockStartupError
  56          ********************************************************************************
  57          * Summary:
  58          *  If an error is encountered during clock configuration (crystal startup error,
  59          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  60          *  the customer, this function will stop in an infinite loop.
  61          *
  62          * Parameters:
  63          *   void
  64          *
  65          * Return:
  66          *   void
  67          *
  68          *******************************************************************************/
  69          CY_CFG_UNUSED
  70          static void CyClockStartupError(uint8 errorCode);
  71          CY_CFG_UNUSED
  72          static void CyClockStartupError(uint8 errorCode)
  73          {
  74   1          /* To remove the compiler warning if errorCode not used.                */
  75   1          errorCode = errorCode;
  76   1      
  77   1          /* `#START CyClockStartupError` */
  78   1      
  79   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  80   1          /* we will end up here to allow the customer to implement something to  */
  81   1          /* deal with the clock condition.                                       */
  82   1      
  83   1          /* `#END` */
  84   1      
  85   1          /* If nothing else, stop here since the clocks have not started         */
  86   1          /* correctly.                                                           */
  87   1          while(1) {}
  88   1      }
  89          #endif
  90          
  91          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  92          /* UDB_0_0_0_CONFIG Address: CYDEV_UCFG_B1_P5_U0_BASE Size (bytes): 128 */
  93          #define BS_UDB_0_0_0_CONFIG_VAL ((const uint8 CYFAR *)0x000801BCu)
  94          
  95          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  96          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x0008023Cu)
  97          
  98          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
  99          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x00080244u)
 100          
 101          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 102          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x0008024Cu)
 103          
 104          
 105          /*******************************************************************************
 106          * Function Name: ClockSetup
 107          ********************************************************************************
 108          *
 109          * Summary:
 110          *  Performs the initialization of all of the clocks in the device based on the
 111          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 112          *  clocks and setting the necessary dividers to produce the desired frequency. 
 113          *
 114          * Parameters:
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 3   

 115          *  void
 116          *
 117          * Return:
 118          *  void
 119          *
 120          *******************************************************************************/
 121          static void ClockSetup(void);
 122          static void ClockSetup(void)
 123          {
 124   1              uint32 timeout;
 125   1              uint8 pllLock;
 126   1      
 127   1      
 128   1              /* Configure Digital Clocks based on settings from Clock DWR */
 129   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x00EFu);
 130   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 131   1      
 132   1              /* Configure ILO based on settings from Clock DWR */
 133   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 135   1      
 136   1              /* Configure IMO based on settings from Clock DWR */
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 138   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 139   1      
 140   1              /* Configure PLL based on settings from Clock DWR */
 141   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 142   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 143   1              /* Wait up to 250us for the PLL to lock */
 144   1              pllLock = 0u;
 145   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 146   1              { 
 147   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 148   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 149   2              }
 150   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 151   1              if (timeout == 0u)
 152   1              {
 153   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 154   2              }
 155   1      
 156   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 157   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 158   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 159   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 160   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 163   1      
 164   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x01u
             -)));
 165   1      }
 166          
 167          
 168          /* Analog API Functions */
 169          
 170          
 171          /*******************************************************************************
 172          * Function Name: AnalogSetDefault
 173          ********************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 4   

 174          *
 175          * Summary:
 176          *  Sets up the analog portions of the chip to default values based on chip
 177          *  configuration options from the project.
 178          *
 179          * Parameters:
 180          *  void
 181          *
 182          * Return:
 183          *  void
 184          *
 185          *******************************************************************************/
 186          static void AnalogSetDefault(void);
 187          static void AnalogSetDefault(void)
 188          {
 189   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 190   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 191   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 192   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0x80u);
 193   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC2_SW0, 0x10u);
 194   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP0_SW0, 0x80u);
 195   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP0_SW4, 0x10u);
 196   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 197   1      }
 198          
 199          
 200          /*******************************************************************************
 201          * Function Name: SetAnalogRoutingPumps
 202          ********************************************************************************
 203          *
 204          * Summary:
 205          * Enables or disables the analog pumps feeding analog routing switches.
 206          * Intended to be called at startup, based on the Vdda system configuration;
 207          * may be called during operation when the user informs us that the Vdda voltage
 208          * crossed the pump threshold.
 209          *
 210          * Parameters:
 211          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 212          *
 213          * Return:
 214          *  void
 215          *
 216          *******************************************************************************/
 217          void SetAnalogRoutingPumps(uint8 enabled)
 218          {
 219   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 220   1              if (enabled != 0u)
 221   1              {
 222   2                      regValue |= 0x22u;
 223   2              }
 224   1              else
 225   1              {
 226   2                      regValue &= (uint8)~0x22u;
 227   2              }
 228   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 229   1      }
 230          
 231          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 232          
 233          
 234          /*******************************************************************************
 235          * Function Name: cyfitter_cfg
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 5   

 236          ********************************************************************************
 237          * Summary:
 238          *  This function is called by the start-up code for the selected device. It
 239          *  performs all of the necessary device configuration based on the design
 240          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 241          *  as Clocks and Pins as well as any component configuration that is necessary.
 242          *
 243          * Parameters:  
 244          *   void
 245          *
 246          * Return:
 247          *   void
 248          *
 249          *******************************************************************************/
 250          
 251          void cyfitter_cfg(void)
 252          {
 253   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 254   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 255   1      
 256   1              {
 257   2      
 258   2                      CYPACKED typedef struct {
 259   2                              void CYFAR *address;
 260   2                              uint16 size;
 261   2                      } CYPACKED_ATTR cfg_memset_t;
 262   2      
 263   2      
 264   2                      CYPACKED typedef struct {
 265   2                              void CYFAR *dest;
 266   2                              const void CYFAR *src;
 267   2                              uint16 size;
 268   2                      } CYPACKED_ATTR cfg_memcpy_t;
 269   2      
 270   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 271   2                              /* address, size */
 272   2                              {(void CYFAR *)(CYREG_PRT1_DR), 80u},
 273   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 274   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 275   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 1536u},
 276   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P5_U1_BASE), 384u},
 277   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 278   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 279   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 280   2                      };
 281   2      
 282   2                      static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 283   2                              /* dest, src, size */
 284   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P5_U0_BASE), BS_UDB_0_0_0_CONFIG_VAL, 128u},
 285   2                      };
 286   2      
 287   2                      uint8 CYDATA i;
 288   2      
 289   2                      /* Zero out critical memory blocks before beginning configuration */
 290   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 291   2                      {
 292   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 293   3                              CYMEMZERO(ms->address, ms->size);
 294   3                      }
 295   2      
 296   2                      /* Copy device configuration data into registers */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 6   

 297   2                      for (i = 0u; i < (sizeof(cfg_memcpy_list)/sizeof(cfg_memcpy_list[0])); i++)
 298   2                      {
 299   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 300   3                              void * CYDATA destPtr = mc->dest;
 301   3                              const void * CYDATA srcPtr = mc->src;
 302   3                              uint16 CYDATA numBytes = mc->size;
 303   3                              CYCONFIGCPY(destPtr, srcPtr, numBytes);
 304   3                      }
 305   2      
 306   2                      cfg_write_bytes(cfg_byte_table);
 307   2      
 308   2                      /* Perform normal device configuration. Order is not critical for these items. */
 309   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT0_CR), 0x0003u);
 310   2      
 311   2                      /* Enable digital routing */
 312   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 313   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 314   2      
 315   2                      /* Enable UDB array */
 316   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 317   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 318   2              }
 319   1      
 320   1      
 321   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 322   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 323   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (const void CYFAR *)(BS_IOPINS0_7_VAL), 8u);
 324   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (const void CYFAR *)(BS_IOPINS0_6_VAL), 8u);
 325   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 326   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 327   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 328   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 329   1              {
 330   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 331   2              }
 332   1      
 333   1      
 334   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 335   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 336   1              /* Setup clocks based on selections from Clock DWR */
 337   1              ClockSetup();
 338   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 339   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 340   1      
 341   1              /* Perform basic analog initialization to defaults */
 342   1              AnalogSetDefault();
 343   1      
 344   1              /* Configure alternate active mode */
 345   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 346   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 347   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 72
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 87
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 129
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7DEF              MOV     R5,#0EFH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 130
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
0013 904300            MOV     DPTR,#04300H
0016 7402              MOV     A,#02H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
0019 904000            MOV     DPTR,#04000H
001C 7408              MOV     A,#08H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
001F 904200            MOV     DPTR,#04200H
0022 7403              MOV     A,#03H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0025 7B0C              MOV     R3,#0CH
0027 7A01              MOV     R2,#01H
0029 7908              MOV     R1,#08H
002B 120000      E     LCALL   _cyread8
002E 9046A1            MOV     DPTR,#046A1H
0031 EF                MOV     A,R7
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0033 7B00              MOV     R3,#00H
0035 7A42              MOV     R2,#042H
0037 7922              MOV     R1,#022H
0039 7D08              MOV     R5,#08H
003B 7C00              MOV     R4,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 8   

003D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 142
0040 7B00              MOV     R3,#00H
0042 7A42              MOV     R2,#042H
0044 7920              MOV     R1,#020H
0046 7D51              MOV     R5,#051H
0048 7C12              MOV     R4,#012H
004A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 144
004D 900000      R     MOV     DPTR,#pllLock
0050 E4                CLR     A
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0052 7F19              MOV     R7,#019H
0054 7E00              MOV     R6,#00H
0056 7D00              MOV     R5,#00H
0058 7C00              MOV     R4,#00H
005A 900000      R     MOV     DPTR,#timeout
005D 120000      E     LCALL   ?C?LSTXDATA
0060         ?C0004:
0060 900000      R     MOV     DPTR,#timeout
0063 120000      E     LCALL   ?C?LLDXDATA
0066 D3                SETB    C
0067 EF                MOV     A,R7
0068 9400              SUBB    A,#00H
006A EE                MOV     A,R6
006B 9400              SUBB    A,#00H
006D 404E              JC      ?C0005
006F 900000      R     MOV     DPTR,#pllLock
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 EF                MOV     A,R7
0075 6403              XRL     A,#03H
0077 6044              JZ      ?C0005
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
0079 904225            MOV     DPTR,#04225H
007C E0                MOVX    A,@DPTR
007D FF                MOV     R7,A
007E EF                MOV     A,R7
007F 5401              ANL     A,#01H
0081 FF                MOV     R7,A
0082 7E00              MOV     R6,#00H
0084 900000      R     MOV     DPTR,#pllLock
0087 E0                MOVX    A,@DPTR
0088 FE                MOV     R6,A
0089 EE                MOV     A,R6
008A 25E0              ADD     A,ACC
008C FE                MOV     R6,A
008D EE                MOV     A,R6
008E 4F                ORL     A,R7
008F FF                MOV     R7,A
0090 EF                MOV     A,R7
0091 5403              ANL     A,#03H
0093 FF                MOV     R7,A
0094 900000      R     MOV     DPTR,#pllLock
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0099 7FE0              MOV     R7,#0E0H
009B 7E01              MOV     R6,#01H
009D 7D00              MOV     R5,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 9   

009F 7C00              MOV     R4,#00H
00A1 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 149
00A4 900000      R     MOV     DPTR,#timeout
00A7 120000      E     LCALL   ?C?LLDXDATA
00AA 7BFF              MOV     R3,#0FFH
00AC 7AFF              MOV     R2,#0FFH
00AE 79FF              MOV     R1,#0FFH
00B0 78FF              MOV     R0,#0FFH
00B2 120000      E     LCALL   ?C?LADD
00B5 900000      R     MOV     DPTR,#timeout
00B8 120000      E     LCALL   ?C?LSTXDATA
00BB 80A3              SJMP    ?C0004
00BD         ?C0005:
                                           ; SOURCE LINE # 151
00BD 900000      R     MOV     DPTR,#timeout
00C0 120000      E     LCALL   ?C?LLDXDATA
00C3 EF                MOV     A,R7
00C4 4E                ORL     A,R6
00C5 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
00C7 7F03              MOV     R7,#03H
00C9 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 154
00CC         ?C0007:
                                           ; SOURCE LINE # 157
00CC 7B00              MOV     R3,#00H
00CE 7A40              MOV     R2,#040H
00D0 7904              MOV     R1,#04H
00D2 7D00              MOV     R5,#00H
00D4 7C01              MOV     R4,#01H
00D6 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 158
00D9 904004            MOV     DPTR,#04004H
00DC 7407              MOV     A,#07H
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
00DF 904006            MOV     DPTR,#04006H
00E2 E4                CLR     A
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
00E4 904008            MOV     DPTR,#04008H
00E7 7448              MOV     A,#048H
00E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00EA 904004            MOV     DPTR,#04004H
00ED E4                CLR     A
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
00EF 904001            MOV     DPTR,#04001H
00F2 7402              MOV     A,#02H
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
00F5 9043A2            MOV     DPTR,#043A2H
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 4401              ORL     A,#01H
00FD FF                MOV     R7,A
00FE 9043A2            MOV     DPTR,#043A2H
0101 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 10  

0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
0103 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
002F 90510D            MOV     DPTR,#0510DH
0032 7480              MOV     A,#080H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
0035 905A90            MOV     DPTR,#05A90H
0038 7410              MOV     A,#010H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
003B 905AC0            MOV     DPTR,#05AC0H
003E 7480              MOV     A,#080H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0041 905AC4            MOV     DPTR,#05AC4H
0044 7410              MOV     A,#010H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
0047 905876            MOV     DPTR,#05876H
004A 7444              MOV     A,#044H
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
004D 22                RET     
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 11  

             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 217
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
0035         ?C0011:
                                           ; SOURCE LINE # 228
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 12  

                                           ; SOURCE LINE # 254
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 290
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9408              SUBB    A,#08H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 293
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 294
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 297
005A 750000      R     MOV     i,#00H
005D         ?C0016:
005D E500        R     MOV     A,i
005F C3                CLR     C
0060 9401              SUBB    A,#01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 13  

0062 5078              JNC     ?C0017
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
0064 AF00        R     MOV     R7,i
0066 EF                MOV     A,R7
0067 75F008            MOV     B,#08H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW cfg_memcpy_list
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        R     ADDC    A,#HIGH cfg_memcpy_list
0072 F583              MOV     DPH,A
0074 AF82              MOV     R7,DPL
0076 AE83              MOV     R6,DPH
0078 8E00        R     MOV     mc,R6
007A 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 300
007C AE00        R     MOV     R6,mc
007E AF00        R     MOV     R7,mc+01H
0080 8F82              MOV     DPL,R7
0082 8E83              MOV     DPH,R6
0084 120000      E     LCALL   ?C?PLDCODE
0087 8B00        R     MOV     destPtr,R3
0089 8A00        R     MOV     destPtr+01H,R2
008B 8900        R     MOV     destPtr+02H,R1
                                           ; SOURCE LINE # 301
008D AE00        R     MOV     R6,mc
008F AF00        R     MOV     R7,mc+01H
0091 8F82              MOV     DPL,R7
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 A3                INC     DPTR
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 8B00        R     MOV     srcPtr,R3
009D 8A00        R     MOV     srcPtr+01H,R2
009F 8900        R     MOV     srcPtr+02H,R1
                                           ; SOURCE LINE # 302
00A1 AE00        R     MOV     R6,mc
00A3 AF00        R     MOV     R7,mc+01H
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7406              MOV     A,#06H
00AB 93                MOVC    A,@A+DPTR
00AC F500        R     MOV     numBytes,A
00AE 7407              MOV     A,#07H
00B0 93                MOVC    A,@A+DPTR
00B1 F500        R     MOV     numBytes+01H,A
                                           ; SOURCE LINE # 303
00B3 AB00        R     MOV     R3,srcPtr
00B5 AA00        R     MOV     R2,srcPtr+01H
00B7 A900        R     MOV     R1,srcPtr+02H
00B9 C003              PUSH    AR3
00BB C002              PUSH    AR2
00BD C001              PUSH    AR1
00BF AB00        R     MOV     R3,destPtr
00C1 AA00        R     MOV     R2,destPtr+01H
00C3 A900        R     MOV     R1,destPtr+02H
00C5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C8 120000      E     LCALL   ?C?PSTXDATA
00CB D001              POP     AR1
00CD D002              POP     AR2
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 14  

00CF D003              POP     AR3
00D1 AF00        R     MOV     R7,numBytes+01H
00D3 AE00        R     MOV     R6,numBytes
00D5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 304
00D8 0500        R     INC     i
00DA 8081              SJMP    ?C0016
00DC         ?C0017:
                                           ; SOURCE LINE # 306
00DC 7B08              MOV     R3,#08H
00DE 7A00              MOV     R2,#00H
00E0 7900              MOV     R1,#00H
00E2 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 309
00E5 7B00              MOV     R3,#00H
00E7 7A58              MOV     R2,#058H
00E9 7948              MOV     R1,#048H
00EB 7D03              MOV     R5,#03H
00ED 7C00              MOV     R4,#00H
00EF 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 312
00F2 7B01              MOV     R3,#01H
00F4 7A50              MOV     R2,#050H
00F6 7903              MOV     R1,#03H
00F8 120000      E     LCALL   _cyread8
00FB EF                MOV     A,R7
00FC 4402              ORL     A,#02H
00FE FD                MOV     R5,A
00FF 7B01              MOV     R3,#01H
0101 7A50              MOV     R2,#050H
0103 7903              MOV     R1,#03H
0105 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 313
0108 7B01              MOV     R3,#01H
010A 7A50              MOV     R2,#050H
010C 7913              MOV     R1,#013H
010E 120000      E     LCALL   _cyread8
0111 EF                MOV     A,R7
0112 4402              ORL     A,#02H
0114 FD                MOV     R5,A
0115 7B01              MOV     R3,#01H
0117 7A50              MOV     R2,#050H
0119 7913              MOV     R1,#013H
011B 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 316
011E 9043A0            MOV     DPTR,#043A0H
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 EF                MOV     A,R7
0124 4440              ORL     A,#040H
0126 FF                MOV     R7,A
0127 9043A0            MOV     DPTR,#043A0H
012A EF                MOV     A,R7
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
012C 9043C2            MOV     DPTR,#043C2H
012F E0                MOVX    A,@DPTR
0130 FF                MOV     R7,A
0131 EF                MOV     A,R7
0132 4410              ORL     A,#010H
0134 FF                MOV     R7,A
0135 9043C2            MOV     DPTR,#043C2H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 15  

0138 EF                MOV     A,R7
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 322
013A 7B08              MOV     R3,#08H
013C 7A02              MOV     R2,#02H
013E 793C              MOV     R1,#03CH
0140 C003              PUSH    AR3
0142 C002              PUSH    AR2
0144 C001              PUSH    AR1
0146 7B00              MOV     R3,#00H
0148 7A51              MOV     R2,#051H
014A 7902              MOV     R1,#02H
014C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
014F 120000      E     LCALL   ?C?PSTXDATA
0152 D001              POP     AR1
0154 D002              POP     AR2
0156 D003              POP     AR3
0158 7F08              MOV     R7,#08H
015A 7E00              MOV     R6,#00H
015C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 323
015F 7B08              MOV     R3,#08H
0161 7A02              MOV     R2,#02H
0163 7944              MOV     R1,#044H
0165 C003              PUSH    AR3
0167 C002              PUSH    AR2
0169 C001              PUSH    AR1
016B 7B00              MOV     R3,#00H
016D 7A51              MOV     R2,#051H
016F 79C2              MOV     R1,#0C2H
0171 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0174 120000      E     LCALL   ?C?PSTXDATA
0177 D001              POP     AR1
0179 D002              POP     AR2
017B D003              POP     AR3
017D 7F08              MOV     R7,#08H
017F 7E00              MOV     R6,#00H
0181 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 324
0184 7B08              MOV     R3,#08H
0186 7A02              MOV     R2,#02H
0188 794C              MOV     R1,#04CH
018A C003              PUSH    AR3
018C C002              PUSH    AR2
018E C001              PUSH    AR1
0190 7B00              MOV     R3,#00H
0192 7A51              MOV     R2,#051H
0194 7962              MOV     R1,#062H
0196 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0199 120000      E     LCALL   ?C?PSTXDATA
019C D001              POP     AR1
019E D002              POP     AR2
01A0 D003              POP     AR3
01A2 7F08              MOV     R7,#08H
01A4 7E00              MOV     R6,#00H
01A6 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 325
01A9 9044F4            MOV     DPTR,#044F4H
01AC 7401              MOV     A,#01H
01AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 16  

01AF 904322            MOV     DPTR,#04322H
01B2 E0                MOVX    A,@DPTR
01B3 FF                MOV     R7,A
01B4 EF                MOV     A,R7
01B5 4408              ORL     A,#08H
01B7 FF                MOV     R7,A
01B8 904322            MOV     DPTR,#04322H
01BB EF                MOV     A,R7
01BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 328
01BD 9046EC            MOV     DPTR,#046ECH
01C0 E0                MOVX    A,@DPTR
01C1 FF                MOV     R7,A
01C2 EF                MOV     A,R7
01C3 C3                CLR     C
01C4 9405              SUBB    A,#05H
01C6 5006              JNC     ?C0019
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
01C8 904689            MOV     DPTR,#04689H
01CB 743A              MOV     A,#03AH
01CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 331
01CE         ?C0019:
                                           ; SOURCE LINE # 335
01CE 904800            MOV     DPTR,#04800H
01D1 74F1              MOV     A,#0F1H
01D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 337
01D4 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 339
01D7 904800            MOV     DPTR,#04800H
01DA 74B1              MOV     A,#0B1H
01DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
01DD 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 345
01E0 7B00              MOV     R3,#00H
01E2 7A43              MOV     R2,#043H
01E4 79A0              MOV     R1,#0A0H
01E6 C003              PUSH    AR3
01E8 C002              PUSH    AR2
01EA C001              PUSH    AR1
01EC 7B00              MOV     R3,#00H
01EE 7A43              MOV     R2,#043H
01F0 79B0              MOV     R1,#0B0H
01F2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01F5 120000      E     LCALL   ?C?PSTXDATA
01F8 D001              POP     AR1
01FA D002              POP     AR2
01FC D003              POP     AR3
01FE 7F0E              MOV     R7,#0EH
0200 7E00              MOV     R6,#00H
0202 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 346
0205 9043B0            MOV     DPTR,#043B0H
0208 E0                MOVX    A,@DPTR
0209 FF                MOV     R7,A
020A EF                MOV     A,R7
020B 54FD              ANL     A,#0FDH
020D FF                MOV     R7,A
020E EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/05/2016 04:15:48 PAGE 17  

020F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 347
0210 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    949    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
